Classfile /D:/DevelopEnvironment/JavaWeb/github/mine/Jzone/Jzone/concurrent/src/main/java/org/trump/vincent/natives/VolatileApp.class
  Last modified 2018-1-1; size 865 bytes
  MD5 checksum 362fdd588e7dbf573c73a6210ef07711
  Compiled from "VolatileApp.java"
public class VolatileApp
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Fieldref           #4.#33         // VolatileApp.isworking:Z
   #2 = Methodref          #10.#34        // java/lang/Object."<init>":()V
   #3 = Fieldref           #4.#35         // VolatileApp.app:LVolatileApp;
   #4 = Class              #36            // VolatileApp
   #5 = Methodref          #4.#34         // VolatileApp."<init>":()V
   #6 = Class              #37            // VolatileApp$1
   #7 = String             #38            // Volatile-App
   #8 = Methodref          #6.#39         // VolatileApp$1."<init>":(LVolatileApp;Ljava/lang/String;)V
   #9 = Methodref          #6.#40         // VolatileApp$1.start:()V
  #10 = Class              #41            // java/lang/Object
  #11 = Utf8               InnerClasses
  #12 = Utf8               app
  #13 = Utf8               LVolatileApp;
  #14 = Utf8               isworking
  #15 = Utf8               Z
  #16 = Utf8               <init>
  #17 = Utf8               ()V
  #18 = Utf8               Code
  #19 = Utf8               LineNumberTable
  #20 = Utf8               getInstance
  #21 = Utf8               ()LVolatileApp;
  #22 = Utf8               StackMapTable
  #23 = Class              #41            // java/lang/Object
  #24 = Class              #42            // java/lang/Throwable
  #25 = Utf8               run
  #26 = Utf8               access$000
  #27 = Utf8               ()Z
  #28 = Utf8               access$002
  #29 = Utf8               (Z)Z
  #30 = Utf8               <clinit>
  #31 = Utf8               SourceFile
  #32 = Utf8               VolatileApp.java
  #33 = NameAndType        #14:#15        // isworking:Z
  #34 = NameAndType        #16:#17        // "<init>":()V
  #35 = NameAndType        #12:#13        // app:LVolatileApp;
  #36 = Utf8               VolatileApp
  #37 = Utf8               VolatileApp$1
  #38 = Utf8               Volatile-App
  #39 = NameAndType        #16:#43        // "<init>":(LVolatileApp;Ljava/lang/String;)V
  #40 = NameAndType        #44:#17        // start:()V
  #41 = Utf8               java/lang/Object
  #42 = Utf8               java/lang/Throwable
  #43 = Utf8               (LVolatileApp;Ljava/lang/String;)V
  #44 = Utf8               start
{
  public VolatileApp();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #2                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0

  public static VolatileApp getInstance();
    descriptor: ()LVolatileApp;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=0
         0: getstatic     #3                  // Field app:LVolatileApp;
         3: ifnonnull     37
         6: ldc           #4                  // class VolatileApp
         8: dup
         9: astore_0
        10: monitorenter
        11: getstatic     #3                  // Field app:LVolatileApp;
        14: ifnonnull     27
        17: new           #4                  // class VolatileApp
        20: dup
        21: invokespecial #5                  // Method "<init>":()V
        24: putstatic     #3                  // Field app:LVolatileApp;
        27: aload_0
        28: monitorexit
        29: goto          37
        32: astore_1
        33: aload_0
        34: monitorexit
        35: aload_1
        36: athrow
        37: getstatic     #3                  // Field app:LVolatileApp;
        40: areturn
      Exception table:
         from    to  target type
            11    29    32   any
            32    35    32   any
      LineNumberTable:
        line 7: 0
        line 8: 6
        line 9: 11
        line 10: 17
        line 12: 27
        line 14: 37
      StackMapTable: number_of_entries = 3
        frame_type = 252 /* append */
          offset_delta = 27
          locals = [ class java/lang/Object ]
        frame_type = 68 /* same_locals_1_stack_item */
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4

  public void run();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=1, args_size=1
         0: new           #6                  // class VolatileApp$1
         3: dup
         4: aload_0
         5: ldc           #7                  // String Volatile-App
         7: invokespecial #8                  // Method VolatileApp$1."<init>":(LVolatileApp;Ljava/lang/String;)V
        10: invokevirtual #9                  // Method VolatileApp$1.start:()V
        13: return
      LineNumberTable:
        line 18: 0
        line 28: 10
        line 29: 13

  static boolean access$000();
    descriptor: ()Z
    flags: ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=1, locals=0, args_size=0
         0: getstatic     #1                  // Field isworking:Z
         3: ireturn
      LineNumberTable:
        line 3: 0

  static boolean access$002(boolean);
    descriptor: (Z)Z
    flags: ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=1, args_size=1
         0: iload_0
         1: dup
         2: putstatic     #1                  // Field isworking:Z
         5: ireturn
      LineNumberTable:
        line 3: 0

  static {};
    descriptor: ()V
    flags: ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_1
         1: putstatic     #1                  // Field isworking:Z
         4: return
      LineNumberTable:
        line 5: 0
}
SourceFile: "VolatileApp.java"
InnerClasses:
     #6; //class VolatileApp$1
